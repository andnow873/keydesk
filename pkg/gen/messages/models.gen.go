// Package messages provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package messages

import (
	"time"
)

// Defines values for SortSide.
const (
	Asc  SortSide = "asc"
	Desc SortSide = "desc"
)

// CreateMessageRequest defines model for CreateMessageRequest.
type CreateMessageRequest struct {
	Priority *int    `json:"priority,omitempty"`
	Text     string  `json:"text"`
	Ttl      *string `json:"ttl,omitempty"`
}

// Error defines model for Error.
type Error struct {
	Code    int    `json:"code"`
	Message string `json:"message"`
}

// Message defines model for Message.
type Message struct {
	Id       int       `json:"id"`
	IsRead   bool      `json:"is_read"`
	Priority int       `json:"priority"`
	Text     string    `json:"text"`
	Time     time.Time `json:"time"`
	Ttl      string    `json:"ttl"`
}

// PaginatedMessages defines model for PaginatedMessages.
type PaginatedMessages struct {
	Messages []Message `json:"messages"`

	// Total The total number of messages
	Total int `json:"total"`
}

// SortSide defines model for SortSide.
type SortSide string

// Limit defines model for Limit.
type Limit = int

// MessageID defines model for MessageID.
type MessageID = int

// Offset defines model for Offset.
type Offset = int

// PriorityFilter defines model for PriorityFilter.
type PriorityFilter map[string]int

// ReadFilter defines model for ReadFilter.
type ReadFilter = bool

// Sort defines model for Sort.
type Sort map[string]SortSide

// GetMessagesParams defines parameters for GetMessages.
type GetMessagesParams struct {
	Offset   *Offset         `form:"offset,omitempty" json:"offset,omitempty"`
	Limit    *Limit          `form:"limit,omitempty" json:"limit,omitempty"`
	Read     *ReadFilter     `form:"read,omitempty" json:"read,omitempty"`
	Priority *PriorityFilter `json:"priority,omitempty"`
	Sort     *Sort           `form:"sort,omitempty" json:"sort,omitempty"`
}

// PostMessagesJSONRequestBody defines body for PostMessages for application/json ContentType.
type PostMessagesJSONRequestBody = CreateMessageRequest
