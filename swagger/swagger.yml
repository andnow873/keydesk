---
swagger: '2.0'
info:
  version: 1.0.0
  title: Keydesk server
basePath: /
paths:
  /token:
    post:
      produces:
        - application/json
      responses:
        201:
          description: Token created.
          schema:
            $ref: "#/definitions/token"
        503:
          description: 'Maintenance'
          schema:
            $ref: "#/definitions/maintenance_error"
        500:
          description: 'Internal server error'
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /user:
    get:
      security:
        - Bearer: [ ]
      produces:
        - application/json
      responses:
        200:
          description: A list of users.
          schema:
            type: array
            items:
              $ref: "#/definitions/user"
        403:
          description: 'You do not have necessary permissions for the resource'
        503:
          description: 'Maintenance'
          schema:
            $ref: "#/definitions/maintenance_error"
        500:
          description: 'Internal server error'
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    post:
      security:
        - Bearer: [ ]
      produces:
        - application/json
      responses:
        201:
          description: New user created.
          schema:
            $ref: "#/definitions/newuser"
        403:
          description: 'You do not have necessary permissions for the resource'
        503:
          description: 'Maintenance'
          schema:
            $ref: "#/definitions/maintenance_error"
        500:
          description: 'Internal server error'
        default:
          description: error
          schema:
            $ref: "#/definitions/error"

  /user/{UserID}:
    delete:
      security:
        - Bearer: [ ]
      produces:
        - application/json
      parameters:
        - type: string
          name: UserID
          in: path
          required: true
      responses:
        204:
          description: User deleted.
        403:
          description: 'You do not have necessary permissions for the resource'
        503:
          description: 'Maintenance'
          schema:
            $ref: "#/definitions/maintenance_error"
        500:
          description: 'Internal server error'
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /users/stats:
    get:
      security:
        - Bearer: [ ]
      produces:
        - application/json
      responses:
        200:
          description: A list of stats.
          schema:
            $ref: "#/definitions/stats"
        403:
          description: 'You do not have necessary permissions for the resource'
        503:
          description: 'Maintenance'
          schema:
            $ref: "#/definitions/maintenance_error"
        500:
          description: 'Internal server error'
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /messages:
    get:
      summary: Get messages
      description: Get messages, triggered by frontend
      operationId: getMessages
      security:
        - Bearer:
            - messages:get
      parameters:
        - in: query
          name: offset
          type: integer
          default: 0
        - in: query
          name: limit
          type: integer
          default: 25
        - in: query
          name: read
          type: boolean
        - in: query
          name: priority
          type: integer
        - in: query
          name: priority-op
          type: string
          default: eq
          enum:
            - eq
            - ne
            - gt
            - lt
            - ge
            - le
      responses:
        200:
          description: List of messages
          schema:
            $ref: '#/definitions/Messages'
        500:
          $ref: '#/definitions/error'
    put:
      summary: Create a message
      description: Create a message, triggered by management. If client is online, send message, else store message.
      operationId: putMessage
      consumes:
        - application/json
      parameters:
        - in: body
          name: message
          description: The user to create.
          schema:
            $ref: '#/definitions/Message'
      responses:
        200:
          description: OK
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /subscription:
    post:
      summary: Send subscription
      description: Send subscription from dashboard to keydesk server
      operationId: postSubscription
      consumes:
        - application/json
      parameters:
        - in: body
          name: subscription
          description: The subscription to create.
          schema:
            $ref: '#/definitions/Subscription'
      responses:
        200:
          description: OK
        500:
          $ref: '#/definitions/error'
    get:
      summary: Get subscription
      description: Get subscription from keydesk server
      operationId: getSubscription
      responses:
        200:
          description: Subscription object
          schema:
            $ref: '#/definitions/Subscription'
        404:
          description: Subscription not found
        500:
          $ref: '#/definitions/error'
  /send-push:
    post:
      summary: Send a push notification
      description: Send a push notification
      operationId: sendPush
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PushRequest'
      responses:
        200:
          description: OK
        500:
          $ref: '#/definitions/error'

definitions:
  token:
    type: object
    required:
      - Token
    properties:
      Token:
        type: string
  newuser:
    type: object
    required:
      - UserName
    properties:
      UserName:
        type: string
      WireguardConfig:
        type: object
        required:
          - TonnelName
          - FileName
          - FileContent
        properties:
          TonnelName:
            type: string
          FileName:
            type: string
          FileContent:
            type: string
      AmnzOvcConfig:
        type: object
        required:
          - TonnelName
          - FileName
          - FileContent
        properties:
          TonnelName:
            type: string
          FileName:
            type: string
          FileContent:
            type: string
      IPSecL2TPManualConfig:
        type: object
        required:
          - Server
          - PSK
          - Username
          - Password
        properties:
          Server:
            type: string
          PSK:
            type: string
          Username:
            type: string
          Password:
            type: string
      OutlineConfig:
        type: object
        required:
          - AccessKey
        properties:
          AccessKey:
            type: string
  user:
    type: object
    required:
      - UserID
      - UserName
      - CreatedAt
      - Status
      - MonthlyQuotaRemainingGB
    properties:
      UserID:
        type: string
      UserName:
        type: string
      Status:
        type: string
      CreatedAt:
        type: string
        format: date-time
      ThrottlingTill:
        type: string
        format: date-time
        x-nullable: true
      MonthlyQuotaRemainingGB:
        type: number
        format: float
      LastVisitHour:
        type: string
        format: date-time
        x-nullable: true
      PersonName:
        type: string
      PersonDesc:
        type: string
      PersonDescLink:
        type: string
  stats:
    type: object
    required:
      - TotalUsers
      - ActiveUsers
      - TotalTrafficGB
    properties:
      TotalUsers:
        type: array
        items:
          type: object
          required:
            - Month
            - Value
          properties:
            Month:
              type: integer
            Value:
              type: integer
      ActiveUsers:
        type: array
        items:
          type: object
          required:
            - Month
            - Value
          properties:
            Month:
              type: integer
            Value:
              type: integer
      TotalTrafficGB:
        type: array
        items:
          type: object
          required:
            - Month
            - Value
          properties:
            Month:
              type: integer
            Value:
              type: number
              format: float
  error:
    type: object
    required:
      - message
    properties:
      code:
        type: integer
      message:
        type: string
  maintenance_error:
    type: object
    required:
      - code
      - message
      - retry_after
    properties:
      code:
        type: integer
      message:
        type: string
      retry_after:
        type: string
  Message:
    type: object
    properties:
      text:
        type: string
      is_read:
        type: boolean
      priority:
        type: integer
      time:
        type: string
        format: date-time
      ttl:
        type: string
    required:
      - text
  Messages:
    type: object
    properties:
      messages:
        type: array
        items:
          $ref: '#/definitions/Message'
      total:
        type: integer
  Subscription:
    type: object
    properties:
      endpoint:
        type: string
      keys:
        type: object
        properties:
          p256dh:
            type: string
          auth:
            type: string
    required:
      - endpoint
      - keys
  PushOptions:
    type: object
    properties:
      subscriber:
        type: string
      topic:
        type: string
      urgency:
        type: string
      public_key:
        type: string
      private_key:
        type: string
  NotificationOptions:
    type: object
    properties:
      title:
        type: string
      options:
        type: object
        properties:
          body:
            type: string
          actions:
            type: array
            items:
              type: object
              properties:
                action:
                  type: string
                icon:
                  type: string
                title:
                  type: string
          badge:
            type: string
          data:
            $ref: '#/definitions/AnyValue'
          dir:
            type: string
          icon:
            type: string
          image:
            type: string
          lang:
            type: string
          renotify:
            type: boolean
          requireInteraction:
            type: boolean
          silent:
            type: boolean
          tag:
            type: string
          timestamp:
            type: integer
          vibrate:
            type: array
            items:
              type: integer
        required:
          - body
    required:
      - title
  PushRequest:
    type: object
    properties:
      notification:
        $ref: '#/definitions/NotificationOptions'
      subscription:
        $ref: '#/definitions/Subscription'
      options:
        $ref: '#/definitions/PushOptions'
    required:
      - notification
      - subscription
      - options
  AnyValue: { }

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header