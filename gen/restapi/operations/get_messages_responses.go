// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/vpngen/keydesk/gen/models"
)

// GetMessagesOKCode is the HTTP code returned for type GetMessagesOK
const GetMessagesOKCode int = 200

/*
GetMessagesOK List of messages

swagger:response getMessagesOK
*/
type GetMessagesOK struct {

	/*
	  In: Body
	*/
	Payload *models.Messages `json:"body,omitempty"`
}

// NewGetMessagesOK creates GetMessagesOK with default headers values
func NewGetMessagesOK() *GetMessagesOK {

	return &GetMessagesOK{}
}

// WithPayload adds the payload to the get messages o k response
func (o *GetMessagesOK) WithPayload(payload *models.Messages) *GetMessagesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get messages o k response
func (o *GetMessagesOK) SetPayload(payload *models.Messages) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMessagesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMessagesInternalServerErrorCode is the HTTP code returned for type GetMessagesInternalServerError
const GetMessagesInternalServerErrorCode int = 500

/*
GetMessagesInternalServerError get messages internal server error

swagger:response getMessagesInternalServerError
*/
type GetMessagesInternalServerError struct {
}

// NewGetMessagesInternalServerError creates GetMessagesInternalServerError with default headers values
func NewGetMessagesInternalServerError() *GetMessagesInternalServerError {

	return &GetMessagesInternalServerError{}
}

// WriteResponse to the client
func (o *GetMessagesInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
