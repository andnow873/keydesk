// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vpngen/keydesk/gen/models"
)

// PostUserReader is a Reader for the PostUser structure.
type PostUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostUserCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewPostUserForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostUserInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostUserServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewPostUserDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostUserCreated creates a PostUserCreated with default headers values
func NewPostUserCreated() *PostUserCreated {
	return &PostUserCreated{}
}

/*
PostUserCreated describes a response with status code 201, with default header values.

New user created.
*/
type PostUserCreated struct {
	Payload *models.Newuser
}

// IsSuccess returns true when this post user created response has a 2xx status code
func (o *PostUserCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post user created response has a 3xx status code
func (o *PostUserCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post user created response has a 4xx status code
func (o *PostUserCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post user created response has a 5xx status code
func (o *PostUserCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post user created response a status code equal to that given
func (o *PostUserCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the post user created response
func (o *PostUserCreated) Code() int {
	return 201
}

func (o *PostUserCreated) Error() string {
	return fmt.Sprintf("[POST /user][%d] postUserCreated  %+v", 201, o.Payload)
}

func (o *PostUserCreated) String() string {
	return fmt.Sprintf("[POST /user][%d] postUserCreated  %+v", 201, o.Payload)
}

func (o *PostUserCreated) GetPayload() *models.Newuser {
	return o.Payload
}

func (o *PostUserCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Newuser)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUserForbidden creates a PostUserForbidden with default headers values
func NewPostUserForbidden() *PostUserForbidden {
	return &PostUserForbidden{}
}

/*
PostUserForbidden describes a response with status code 403, with default header values.

You do not have necessary permissions for the resource
*/
type PostUserForbidden struct {
}

// IsSuccess returns true when this post user forbidden response has a 2xx status code
func (o *PostUserForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post user forbidden response has a 3xx status code
func (o *PostUserForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post user forbidden response has a 4xx status code
func (o *PostUserForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post user forbidden response has a 5xx status code
func (o *PostUserForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post user forbidden response a status code equal to that given
func (o *PostUserForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the post user forbidden response
func (o *PostUserForbidden) Code() int {
	return 403
}

func (o *PostUserForbidden) Error() string {
	return fmt.Sprintf("[POST /user][%d] postUserForbidden ", 403)
}

func (o *PostUserForbidden) String() string {
	return fmt.Sprintf("[POST /user][%d] postUserForbidden ", 403)
}

func (o *PostUserForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostUserInternalServerError creates a PostUserInternalServerError with default headers values
func NewPostUserInternalServerError() *PostUserInternalServerError {
	return &PostUserInternalServerError{}
}

/*
PostUserInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type PostUserInternalServerError struct {
}

// IsSuccess returns true when this post user internal server error response has a 2xx status code
func (o *PostUserInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post user internal server error response has a 3xx status code
func (o *PostUserInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post user internal server error response has a 4xx status code
func (o *PostUserInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post user internal server error response has a 5xx status code
func (o *PostUserInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post user internal server error response a status code equal to that given
func (o *PostUserInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post user internal server error response
func (o *PostUserInternalServerError) Code() int {
	return 500
}

func (o *PostUserInternalServerError) Error() string {
	return fmt.Sprintf("[POST /user][%d] postUserInternalServerError ", 500)
}

func (o *PostUserInternalServerError) String() string {
	return fmt.Sprintf("[POST /user][%d] postUserInternalServerError ", 500)
}

func (o *PostUserInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostUserServiceUnavailable creates a PostUserServiceUnavailable with default headers values
func NewPostUserServiceUnavailable() *PostUserServiceUnavailable {
	return &PostUserServiceUnavailable{}
}

/*
PostUserServiceUnavailable describes a response with status code 503, with default header values.

Maintenance
*/
type PostUserServiceUnavailable struct {
	Payload *models.MaintenanceError
}

// IsSuccess returns true when this post user service unavailable response has a 2xx status code
func (o *PostUserServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post user service unavailable response has a 3xx status code
func (o *PostUserServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post user service unavailable response has a 4xx status code
func (o *PostUserServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this post user service unavailable response has a 5xx status code
func (o *PostUserServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this post user service unavailable response a status code equal to that given
func (o *PostUserServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

// Code gets the status code for the post user service unavailable response
func (o *PostUserServiceUnavailable) Code() int {
	return 503
}

func (o *PostUserServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /user][%d] postUserServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostUserServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /user][%d] postUserServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostUserServiceUnavailable) GetPayload() *models.MaintenanceError {
	return o.Payload
}

func (o *PostUserServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MaintenanceError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUserDefault creates a PostUserDefault with default headers values
func NewPostUserDefault(code int) *PostUserDefault {
	return &PostUserDefault{
		_statusCode: code,
	}
}

/*
PostUserDefault describes a response with status code -1, with default header values.

error
*/
type PostUserDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this post user default response has a 2xx status code
func (o *PostUserDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this post user default response has a 3xx status code
func (o *PostUserDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this post user default response has a 4xx status code
func (o *PostUserDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this post user default response has a 5xx status code
func (o *PostUserDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this post user default response a status code equal to that given
func (o *PostUserDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the post user default response
func (o *PostUserDefault) Code() int {
	return o._statusCode
}

func (o *PostUserDefault) Error() string {
	return fmt.Sprintf("[POST /user][%d] PostUser default  %+v", o._statusCode, o.Payload)
}

func (o *PostUserDefault) String() string {
	return fmt.Sprintf("[POST /user][%d] PostUser default  %+v", o._statusCode, o.Payload)
}

func (o *PostUserDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostUserDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
