// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vpngen/keydesk/gen/models"
)

// DeleteUserUserIDReader is a Reader for the DeleteUserUserID structure.
type DeleteUserUserIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteUserUserIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteUserUserIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewDeleteUserUserIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteUserUserIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteUserUserIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteUserUserIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteUserUserIDNoContent creates a DeleteUserUserIDNoContent with default headers values
func NewDeleteUserUserIDNoContent() *DeleteUserUserIDNoContent {
	return &DeleteUserUserIDNoContent{}
}

/*
DeleteUserUserIDNoContent describes a response with status code 204, with default header values.

User deleted.
*/
type DeleteUserUserIDNoContent struct {
}

// IsSuccess returns true when this delete user user Id no content response has a 2xx status code
func (o *DeleteUserUserIDNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete user user Id no content response has a 3xx status code
func (o *DeleteUserUserIDNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user user Id no content response has a 4xx status code
func (o *DeleteUserUserIDNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete user user Id no content response has a 5xx status code
func (o *DeleteUserUserIDNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete user user Id no content response a status code equal to that given
func (o *DeleteUserUserIDNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete user user Id no content response
func (o *DeleteUserUserIDNoContent) Code() int {
	return 204
}

func (o *DeleteUserUserIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /user/{UserID}][%d] deleteUserUserIdNoContent ", 204)
}

func (o *DeleteUserUserIDNoContent) String() string {
	return fmt.Sprintf("[DELETE /user/{UserID}][%d] deleteUserUserIdNoContent ", 204)
}

func (o *DeleteUserUserIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteUserUserIDForbidden creates a DeleteUserUserIDForbidden with default headers values
func NewDeleteUserUserIDForbidden() *DeleteUserUserIDForbidden {
	return &DeleteUserUserIDForbidden{}
}

/*
DeleteUserUserIDForbidden describes a response with status code 403, with default header values.

You do not have necessary permissions for the resource
*/
type DeleteUserUserIDForbidden struct {
}

// IsSuccess returns true when this delete user user Id forbidden response has a 2xx status code
func (o *DeleteUserUserIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user user Id forbidden response has a 3xx status code
func (o *DeleteUserUserIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user user Id forbidden response has a 4xx status code
func (o *DeleteUserUserIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete user user Id forbidden response has a 5xx status code
func (o *DeleteUserUserIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete user user Id forbidden response a status code equal to that given
func (o *DeleteUserUserIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete user user Id forbidden response
func (o *DeleteUserUserIDForbidden) Code() int {
	return 403
}

func (o *DeleteUserUserIDForbidden) Error() string {
	return fmt.Sprintf("[DELETE /user/{UserID}][%d] deleteUserUserIdForbidden ", 403)
}

func (o *DeleteUserUserIDForbidden) String() string {
	return fmt.Sprintf("[DELETE /user/{UserID}][%d] deleteUserUserIdForbidden ", 403)
}

func (o *DeleteUserUserIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteUserUserIDInternalServerError creates a DeleteUserUserIDInternalServerError with default headers values
func NewDeleteUserUserIDInternalServerError() *DeleteUserUserIDInternalServerError {
	return &DeleteUserUserIDInternalServerError{}
}

/*
DeleteUserUserIDInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type DeleteUserUserIDInternalServerError struct {
}

// IsSuccess returns true when this delete user user Id internal server error response has a 2xx status code
func (o *DeleteUserUserIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user user Id internal server error response has a 3xx status code
func (o *DeleteUserUserIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user user Id internal server error response has a 4xx status code
func (o *DeleteUserUserIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete user user Id internal server error response has a 5xx status code
func (o *DeleteUserUserIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete user user Id internal server error response a status code equal to that given
func (o *DeleteUserUserIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete user user Id internal server error response
func (o *DeleteUserUserIDInternalServerError) Code() int {
	return 500
}

func (o *DeleteUserUserIDInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /user/{UserID}][%d] deleteUserUserIdInternalServerError ", 500)
}

func (o *DeleteUserUserIDInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /user/{UserID}][%d] deleteUserUserIdInternalServerError ", 500)
}

func (o *DeleteUserUserIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteUserUserIDServiceUnavailable creates a DeleteUserUserIDServiceUnavailable with default headers values
func NewDeleteUserUserIDServiceUnavailable() *DeleteUserUserIDServiceUnavailable {
	return &DeleteUserUserIDServiceUnavailable{}
}

/*
DeleteUserUserIDServiceUnavailable describes a response with status code 503, with default header values.

Maintenance
*/
type DeleteUserUserIDServiceUnavailable struct {
	Payload *models.MaintenanceError
}

// IsSuccess returns true when this delete user user Id service unavailable response has a 2xx status code
func (o *DeleteUserUserIDServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete user user Id service unavailable response has a 3xx status code
func (o *DeleteUserUserIDServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete user user Id service unavailable response has a 4xx status code
func (o *DeleteUserUserIDServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete user user Id service unavailable response has a 5xx status code
func (o *DeleteUserUserIDServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this delete user user Id service unavailable response a status code equal to that given
func (o *DeleteUserUserIDServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

// Code gets the status code for the delete user user Id service unavailable response
func (o *DeleteUserUserIDServiceUnavailable) Code() int {
	return 503
}

func (o *DeleteUserUserIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /user/{UserID}][%d] deleteUserUserIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteUserUserIDServiceUnavailable) String() string {
	return fmt.Sprintf("[DELETE /user/{UserID}][%d] deleteUserUserIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteUserUserIDServiceUnavailable) GetPayload() *models.MaintenanceError {
	return o.Payload
}

func (o *DeleteUserUserIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MaintenanceError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserUserIDDefault creates a DeleteUserUserIDDefault with default headers values
func NewDeleteUserUserIDDefault(code int) *DeleteUserUserIDDefault {
	return &DeleteUserUserIDDefault{
		_statusCode: code,
	}
}

/*
DeleteUserUserIDDefault describes a response with status code -1, with default header values.

error
*/
type DeleteUserUserIDDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this delete user user ID default response has a 2xx status code
func (o *DeleteUserUserIDDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this delete user user ID default response has a 3xx status code
func (o *DeleteUserUserIDDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this delete user user ID default response has a 4xx status code
func (o *DeleteUserUserIDDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this delete user user ID default response has a 5xx status code
func (o *DeleteUserUserIDDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this delete user user ID default response a status code equal to that given
func (o *DeleteUserUserIDDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the delete user user ID default response
func (o *DeleteUserUserIDDefault) Code() int {
	return o._statusCode
}

func (o *DeleteUserUserIDDefault) Error() string {
	return fmt.Sprintf("[DELETE /user/{UserID}][%d] DeleteUserUserID default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteUserUserIDDefault) String() string {
	return fmt.Sprintf("[DELETE /user/{UserID}][%d] DeleteUserUserID default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteUserUserIDDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteUserUserIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
