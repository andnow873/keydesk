// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// SendPushReader is a Reader for the SendPush structure.
type SendPushReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SendPushReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSendPushOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewSendPushInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /send-push] sendPush", response, response.Code())
	}
}

// NewSendPushOK creates a SendPushOK with default headers values
func NewSendPushOK() *SendPushOK {
	return &SendPushOK{}
}

/*
SendPushOK describes a response with status code 200, with default header values.

OK
*/
type SendPushOK struct {
}

// IsSuccess returns true when this send push o k response has a 2xx status code
func (o *SendPushOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this send push o k response has a 3xx status code
func (o *SendPushOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this send push o k response has a 4xx status code
func (o *SendPushOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this send push o k response has a 5xx status code
func (o *SendPushOK) IsServerError() bool {
	return false
}

// IsCode returns true when this send push o k response a status code equal to that given
func (o *SendPushOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the send push o k response
func (o *SendPushOK) Code() int {
	return 200
}

func (o *SendPushOK) Error() string {
	return fmt.Sprintf("[POST /send-push][%d] sendPushOK ", 200)
}

func (o *SendPushOK) String() string {
	return fmt.Sprintf("[POST /send-push][%d] sendPushOK ", 200)
}

func (o *SendPushOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSendPushInternalServerError creates a SendPushInternalServerError with default headers values
func NewSendPushInternalServerError() *SendPushInternalServerError {
	return &SendPushInternalServerError{}
}

/*
SendPushInternalServerError describes a response with status code 500, with default header values.

SendPushInternalServerError send push internal server error
*/
type SendPushInternalServerError struct {
}

// IsSuccess returns true when this send push internal server error response has a 2xx status code
func (o *SendPushInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this send push internal server error response has a 3xx status code
func (o *SendPushInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this send push internal server error response has a 4xx status code
func (o *SendPushInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this send push internal server error response has a 5xx status code
func (o *SendPushInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this send push internal server error response a status code equal to that given
func (o *SendPushInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the send push internal server error response
func (o *SendPushInternalServerError) Code() int {
	return 500
}

func (o *SendPushInternalServerError) Error() string {
	return fmt.Sprintf("[POST /send-push][%d] sendPushInternalServerError ", 500)
}

func (o *SendPushInternalServerError) String() string {
	return fmt.Sprintf("[POST /send-push][%d] sendPushInternalServerError ", 500)
}

func (o *SendPushInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
